name: Terraform CI/CD

on:
  pull_request:
    branches:
      - main
    paths:
      - '**.tf'
      - 'terraform/**'
      - '.github/workflows/terraform-workflow.yaml'

jobs:
  detect:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Detect Changed Paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            aws:
              - 'terraform/aws/**'
              - 'terraform/examples/AWS-private-location/**'
              - 'terraform/examples/AWS-private-package/**'
            azure:
              - 'terraform/azure/**'
              - 'terraform/examples/AZURE-private-location/**'
              - 'terraform/examples/AZURE-private-package/**'
            gcp:
              - 'terraform/gcp/**'
              - 'terraform/examples/GCP-private-location/**'
              - 'terraform/examples/GCP-private-package/**'
      - name: Override module sources for current branch
        run: |
          BRANCH_NAME=${{ github.head_ref }} 
          find . -type f -name '*.tf' -exec sed -Ei 's#(git::https://github\.com/gatling/gatling-enterprise-control-plane-deployment//[^?"]*)(["]|$)#\1?ref='"$BRANCH_NAME"'\2#g' {} +
      - uses: hashicorp/setup-terraform@v3
      - name: Test Terraform AWS
        if: steps.filter.outputs.aws == 'true'
        run: |
          cd terraform/examples/AWS-private-location
          terraform init -backend=false
          terraform validate
          cd ../AWS-private-package
          terraform init -backend=false
          terraform validate
      - name: Test Terraform Azure
        if: steps.filter.outputs.azure == 'true'
        run: |
          cd terraform/examples/AZURE-private-location
          terraform init -backend=false
          terraform validate
          cd ../AZURE-private-package
          terraform init -backend=false
          terraform validate
      - name: Test Terraform GCP
        if: steps.filter.outputs.gcp == 'true'
        run: |
          cd terraform/examples/GCP-private-location
          terraform init -backend=false
          terraform validate
          cd ../GCP-private-package
          terraform init -backend=false
          terraform validate
